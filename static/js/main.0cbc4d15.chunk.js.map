{"version":3,"sources":["components/User.js","components/UsersList.js","components/Month.js","components/MonthList.js","App.js","services/users-service.js","index.js"],"names":["User","user","firstName","lastName","UsersList","props","users","className","map","key","id","Month","colorClass","monthName","length","MonthList","months","month","App","state","axios","get","then","data","transformData","setState","options","emptyArray","Array","item","i","Date","toLocaleString","transformedDataTemplate","this","makeTransformedDataTemplate","reduce","acc","dob","getMonth","push","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAGA,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACd,OACE,oCACE,8BACGA,EAAKC,UADR,IACoBD,EAAKE,WCH/B,SAASC,EAAUC,GAAQ,IACjBC,EAAUD,EAAVC,MACR,OACE,wBAAIC,UAAU,kBACXD,EAAME,KAAI,SAAAP,GAAI,OACb,wBAAIM,UAAU,YAAYE,IAAKR,EAAKS,IAClC,kBAACV,EAAD,CAAMC,KAAMA,SCNtB,SAASU,EAAT,GAAsC,IAChCC,EADWC,EAAoB,EAApBA,UAAWP,EAAS,EAATA,MAa1B,OAVIA,EAAMQ,QAAU,EAClBF,EAAa,6BACJN,EAAMQ,QAAU,GAAKR,EAAMQ,QAAU,EAC9CF,EAAa,2BACJN,EAAMQ,QAAU,GAAKR,EAAMQ,QAAU,GAC9CF,EAAa,2BACJN,EAAMQ,OAAS,KACxBF,EAAa,2BAIb,yBAAKL,UAAWK,GACbC,EACD,kBAACT,EAAD,CAAWE,MAAOA,KChBxB,SAASS,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OACnB,OACE,4BACGA,EAAOR,KAAI,SAAAS,GAAK,OACf,wBAAIR,IAAKQ,EAAMA,OACb,kBAACN,EAAD,CAAOE,UAAWI,EAAMA,MAAOX,MAAOW,EAAMX,a,IC0CvCY,E,4MA9CbC,MAAQ,CACNH,OAAQ,I,kEAGW,IAAD,OCNpBI,IACGC,IAAI,kEACJC,MAAK,qBAAGC,QDMND,MAAK,SAAAhB,GAAK,OAAI,EAAKkB,cAAclB,MACjCgB,MAAK,SAAAN,GAAM,OACV,EAAKS,SAAS,CACZT,gB,oDAMN,IAAMU,EAAU,CAAET,MAAO,QACnBU,EAAa,IAAIC,MAAM,IAE7B,MAAO,UAAID,GAAYnB,KAAI,SAACqB,EAAMC,GAEhC,MAAO,CACLb,MAFY,IAAIc,KAAK,EAAGD,GAAGE,eAAe,EAAGN,GAG7CpB,MAAO,S,oCAKCA,GACZ,IAAM2B,EAA0BC,KAAKC,8BAErC,OAAO7B,EAAM8B,QAAO,SAACC,EAAKpC,GAGxB,OADAoC,EADU,IAAIN,KAAK9B,EAAKqC,KAAKC,YACtBjC,MAAMkC,KAAKvC,GACXoC,IACNJ,K,+BAIH,OACE,yBAAK1B,UAAU,aACb,kBAACQ,EAAD,CAAWC,OAAQkB,KAAKf,MAAMH,c,GAzCpByB,aEClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0cbc4d15.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  return (\n    <>\n      <span>\n        {user.firstName} {user.lastName}\n      </span>\n    </>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.objectOf(PropTypes.string),\n};\n\nexport { User };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { User } from './User';\n\nfunction UsersList(props) {\n  const { users } = props;\n  return (\n    <ul className=\"drop-down-list\">\n      {users.map(user => (\n        <li className=\"user-item\" key={user.id}>\n          <User user={user} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nUsersList.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n};\n\nexport { UsersList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { UsersList } from './UsersList';\n\nfunction Month({ monthName, users }) {\n  let colorClass;\n\n  if (users.length <= 2) {\n    colorClass = 'alert alert-secondary item';\n  } else if (users.length >= 3 && users.length <= 6) {\n    colorClass = 'alert alert-primary item';\n  } else if (users.length >= 7 && users.length <= 10) {\n    colorClass = 'alert alert-success item';\n  } else if (users.length > 10) {\n    colorClass = 'alert alert-danger item';\n  }\n\n  return (\n    <div className={colorClass}>\n      {monthName}\n      <UsersList users={users} />\n    </div>\n  );\n}\n\nMonth.propTypes = {\n  monthName: PropTypes.string,\n  users: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n};\n\nexport { Month };\n","import React from 'react';\nimport PropTypes, { exact } from 'prop-types';\nimport { Month } from './Month';\n\nfunction MonthList({ months }) {\n  return (\n    <ul>\n      {months.map(month => (\n        <li key={month.month}>\n          <Month monthName={month.month} users={month.users} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMonthList.propTypes = {\n  months: PropTypes.arrayOf(\n    exact({\n      month: PropTypes.string,\n      users: PropTypes.array,\n    }),\n  ).isRequired,\n};\n\nexport { MonthList };\n","import React, { Component } from 'react';\nimport { getUsers } from './services/users-service';\nimport { MonthList } from './components/MonthList';\n\nclass App extends Component {\n  state = {\n    months: [],\n  };\n\n  componentDidMount() {\n    getUsers()\n      .then(users => this.transformData(users))\n      .then(months =>\n        this.setState({\n          months,\n        }),\n      );\n  }\n\n  makeTransformedDataTemplate() {\n    const options = { month: 'long' };\n    const emptyArray = new Array(12);\n\n    return [...emptyArray].map((item, i) => {\n      const month = new Date(0, i).toLocaleString(0, options);\n      return {\n        month,\n        users: [],\n      };\n    });\n  }\n\n  transformData(users) {\n    const transformedDataTemplate = this.makeTransformedDataTemplate();\n\n    return users.reduce((acc, user) => {\n      const i = new Date(user.dob).getMonth();\n      acc[i].users.push(user);\n      return acc;\n    }, transformedDataTemplate);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <MonthList months={this.state.months} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import axios from 'axios';\n\nconst getUsers = () =>\n  axios\n    .get('https://yalantis-react-school-api.yalantis.com/api/task0/users')\n    .then(({ data }) => data);\n\nexport { getUsers };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}